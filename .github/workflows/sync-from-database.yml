name: Mirror Database Release Branch to Master

on:
  # Run every 6 hours
  schedule:
    - cron: '0 */6 * * *'
  # Allow manual triggering
  workflow_dispatch:
  # Also trigger when Database repository dispatches updates
  repository_dispatch:
    types: [database-release-updated]

jobs:
  mirror:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout automation branch
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Setup Git
        run: |
          git config user.name "ehtagtranslation[bot]"
          git config user.email "66814738+ehtagtranslation[bot]@users.noreply.github.com"
      
      - name: Add Database remote
        run: |
          git remote add database https://github.com/EhTagTranslation/Database.git || true
          git remote set-url database https://github.com/EhTagTranslation/Database.git
      
      - name: Fetch Database release branch
        run: |
          git fetch database release
      
      - name: Check for updates
        id: check_updates
        run: |
          # Get the latest SHA from Database release branch
          LATEST_SHA=$(git rev-parse database/release)
          
          # Get the current SHA from master branch (if it exists)
          git fetch origin master || true
          CURRENT_SHA=$(git rev-parse origin/master 2>/dev/null || echo "")
          
          echo "Current master SHA: $CURRENT_SHA"
          echo "Latest Database release SHA: $LATEST_SHA"
          
          if [ "$CURRENT_SHA" != "$LATEST_SHA" ]; then
            echo "Updates available - will mirror Database/release to master"
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "latest_sha=$LATEST_SHA" >> $GITHUB_OUTPUT
          else
            echo "Master branch is already up to date with Database/release"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Mirror Database release to master
        if: steps.check_updates.outputs.has_updates == 'true'
        run: |
          # Create a new orphan branch for master
          git checkout --orphan new-master
          
          # Remove all files from the staging area
          git rm -rf . 2>/dev/null || true
          
          # Copy all files from Database release branch
          git checkout database/release -- .
          
          # Stage all files
          git add .
          
          # Create commit with Database release commit message and SHA reference
          DATABASE_COMMIT_MSG=$(git log -1 --pretty=format:"%s" database/release)
          git commit -m "Mirror from Database/release: $DATABASE_COMMIT_MSG" \
                     -m "Source commit: ${{ steps.check_updates.outputs.latest_sha }}"
          
          # Force push to master branch (this replaces master completely)
          git push origin new-master:master --force
          
          echo "âœ… Successfully mirrored Database/release to master"
      
      - name: Report mirror status
        run: |
          if [ "${{ steps.check_updates.outputs.has_updates }}" == "true" ]; then
            echo "::notice::Master branch mirrored from Database/release with SHA ${{ steps.check_updates.outputs.latest_sha }}"
          else
            echo "::notice::Master branch is already up to date with Database/release"
          fi